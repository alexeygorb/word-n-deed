<?php

/**
 * Implements hook_menu().
 */
function word_menu() {
  $items = array();
  $items['the-word'] = array(
    'page callback' => 'word_word_page',
    'title' => 'With word',
    'file' => 'word.pages.inc',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['the-deed'] = array(
    'page callback' => 'word_deed_page',
    'file' => 'word.pages.inc',
    'title' => 'With deed',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['ajax/word'] = array(
    'page callback' => 'word_ajax_word_page',
    'file' => 'word.pages.inc',
    'page arguments' => array(2, 3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['ajax/avatar'] = array(
    'page callback' => 'word_ajax_avatar_save',
    'file' => 'word.pages.inc',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function word_theme() {
  return array(
    'word_page' => array(
      'variables' => array(
        'add_form' => '',
      ),
      'template' => 'word-page-contents',
    ),
    'word_add_word' => array(
      'variables' => array(),
      'template' => 'word-add-word',
    ),
  );
}

function word_add_form($form, &$form_state) {

  $form = array();
  $form['header'] = array(
    '#markup' => '<h2>Постав аватар</h2>',
  );
  $form['im-container'] = array(
    '#prefix' => '<div class="preview-wrapper"><div id="im-area">',
    'image' => array(
      '#markup' => '',
    ),
    'fid' => array(
      '#type' => 'hidden',
      '#default_value' => 0,
    ),
    'token' => array(
      '#type' => 'hidden',
      '#default_value' => '',
    ),
    '#suffix' => '</div></div>',
    '#after_build' => array('word_add_form_preview_after_build'),
  );
  $form['ava_source'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(
        'ava-source-container',
      ),
    ),
  );
  $form['ava_source']['file'] = array(
    '#type' => 'file',
    '#title' => t('Завантажити з комп’ютера'),
  );

  $form['ava_source']['upload'] = array(
    '#type' => 'submit',
    '#value' => t('Upload'),
    '#executes_submit_callback' => FALSE,
    '#limit_validation_errors' => array(),
    '#ajax' => array(
      'callback'=> 'word_upload_image',
      'wrapper'=> 'im-area',
      'method'=> 'replace',
      'effect'=> 'fade',
    ),
  );
  $form['ava_source']['alt'] = array(
    '#markup' => '<h4>або з соцмережі:</h4><a href="#" id="fb-login-image">FB</a><a href="#" id="vk-login-image">VK</a>'
  );

  $form['header2'] = array(
    '#markup' => '<h3>Напиши кілька теплих слів солдатам</h3>',
  );

  $form['text'] = array(
    '#type' => 'textarea',
    '#resizable' => FALSE,
    '#description' => 'Залишилось символів: <span>' . variable_get('word_chars_limit', 150) . '</span>',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Publish'),
  );
  return $form;
}

function word_add_form_preview_after_build($element, &$form_state) {
  watchdog('test', 'call');
  $image_path = '/' . drupal_get_path('module', 'word') . '/images/profile.jpg';
  if (!empty($form_state['values']['fid'])) {
    $file = file_load($form_state['values']['fid']);
    $image_path = image_style_url('card_thumb', $file->uri);
  }
  $element['image']['#markup'] = '<img typeof="foaf:Image" src="' . $image_path .'" width="110" height="110" />';

  return $element;
}

function word_upload_image($form, $form_state){

  $file = file_save_upload('file', array('file_validate_extensions' => array('png gif jpg jpeg')), "public://avatars",$replace = FILE_EXISTS_RENAME);
  if ($file)
  {
    // $file->status=FILE_STATUS_PERMANENT;
    file_save($file);
    $form['im-container']=array(
      '#prefix'=>'<div id="im-area">',
      'image' => array(
        '#markup'=>'<img src="/sites/default/files/avatars/'.$file->filename.'" height="110" width="110" />',
      ),
      'fid' => array(
        '#type' => 'hidden',
        '#name' => 'fid',
        '#value' => $file->fid,
      ),
      'token' => array(
        '#type' => 'hidden',
        '#name' => 'token',
        '#value' => word_get_token($file->fid),
      ),
      '#suffix'=>'</div>',
    );
  }
  else {
    drupal_set_message('No file uploaded.');
  }

  return $form['im-container'];
}

function word_add_form_validate($form, &$form_state) {
  if (empty($form_state['values']['text'])) {
    form_error($form['text'], t('Please enter the message for our soldiers'));
  }
  if (empty($form_state['values']['fid']) || empty($form_state['values']['token'])
    || $form_state['values']['token'] !== word_get_token($form_state['values']['fid'])
  ) {
    form_error($form['im-container'], t('Please upload an image'));
  }
}

function word_add_form_submit($form, $form_state) {
  // Publish the file.
  $file = file_load($form_state['values']['fid']);
  $file->status = FILE_STATUS_PERMANENT;
  file_save($file);

  global $language;

  $e = entity_create('node', array('type' => 'card'));
  $e->language = $language->language;
  // Create a Entity Wrapper of that new Entity
  $entity = entity_metadata_wrapper('node', $e);
  // Specify the title.
  $entity->title = drupal_substr($form_state['values']['text'], 0, 100);
  $entity->status = NODE_NOT_PUBLISHED;
  $entity->field_card_photo->set( array('fid' => $form_state['values']['fid']) );
  $entity->field_text = drupal_substr($form_state['values']['text'], 0, variable_get('word_chars_limit', 150));
  // Save the node.
  $entity->save();

  $form_state['redirect'] = 'the-word';
  drupal_set_message(t('Your message will be published after the moderator checks it.'));
}

function word_preprocess_node(&$vars) {
  if (!empty($vars['elements']['#attributes'])) {
    if (!empty($vars['elements']['#attributes']['class'])) {
      $vars['classes_array'] = array_merge($vars['classes_array'], $vars['elements']['#attributes']['class']);
    }
  }
}

function word_preprocess_page(&$vars) {

  drupal_add_js(array(
    'fb' => array('appId' => variable_get('fb_appid', 0)),
    'vk' => array('appId' => variable_get('vk_app_id', 0)),
  ), 'setting');
  drupal_add_js('
  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "//connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, \'script\', \'facebook-jssdk\'));
   ', 'inline');

  drupal_add_js('//vk.com/js/api/openapi.js', 'external');

  drupal_add_js(drupal_get_path('module', 'word') . '/js/social.js');
}

function word_get_token($value) {
  return drupal_hmac_base64($value, drupal_get_private_key() . drupal_get_hash_salt());
}
